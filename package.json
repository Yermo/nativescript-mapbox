{
  "name": "nativescript-mapbox",
  "version": "1.5.0",
  "description": "Native Maps, by Mapbox.",
  "main": "mapbox.js",
  "typings": "mapbox.d.ts",
  "nativescript": {
    "platforms": {
      "android": "2.3.0",
      "ios": "2.3.0"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eddyverbruggen/nativescript-mapbox.git"
  },
  "keywords": [
    "NativeScript",
    "Map",
    "Maps",
    "Native Maps",
    "Mapbox"
  ],
  "author": {
    "name": "Telerik / Eddy Verbruggen",
    "email": "eddyverbruggen@gmail.com"
  },
  "contributors": [
    {
      "name": "Brad Martin",
      "email": "bradwaynemartin@gmail.com",
      "url": "https://github.com/bradmartin"
    }
  ],
  "license": {
    "type": "MIT",
    "url": "https://github.com/eddyverbruggen/nativescript-mapbox/blob/master/LICENSE"
  },
  "bugs": {
    "url": "https://github.com/eddyverbruggen/nativescript-mapbox/issues"
  },
  "homepage": "https://github.com/eddyverbruggen/nativescript-mapbox",
  "readme": "# NativeScript Mapbox\n\nAwesome native OpenGL-owered maps - by Mapbox\n\n<img src=\"screenshots/ios-demoapp-slice.png\" width=\"375px\" height=\"196px\" />\n\n### Use when\n* you want full map styling capability to match the uses of your app (example: downplaying highways for a running app),\n* you want a platform independent map implementation,\n* you care about performance so you don't want a web based solution,\n* you want an open source map implementation that you can tweak yourself,\n* you want to leverage Mapbox's backend to visualize massive geo data sets,\n* you want advanced analytics about your app's users.\n\n## Prerequisites\nNativeScript 1.3.0 (`tns --version`) is required for smooth installation, so please upgrade if you need to.\n\nYou need a Mapbox API access token (they have a free Starter plan!), so [sign up with Mapbox](https://www.mapbox.com/signup/).\nOnce you've registered go to your Account > Apps > New token. The 'Default Secret Token' is what you'll need.\n\n## Installation\nFrom the command prompt go to your app's root folder and execute:\n```\ntns plugin add nativescript-mapbox\n```\n\nIf you get an error during iOS build related to Podspec versions, probably the easiest fix is:\n`tns platform remove ios` and `tns platform add ios`.\n\n## Usage\n\nIf you want a quickstart, [clone our demo app](https://github.com/EddyVerbruggen/nativescript-mapbox-demo).\nAnd here's the comprehensive list of supported functions:\n\n### show\n```js\n  var mapbox = require(\"nativescript-mapbox\");\n\n  mapbox.show({\n    accessToken: 'YOUR_API_ACCESS_TOKEN', // see 'Prerequisites' above\n    style: 'emerald', // light|dark|emerald|satellite|streets , default 'streets' (there is also 'hybrid' for Android)\n    margins: {\n      left: 40, // default 0\n      right: 40, // default 0\n      top: 450, // default 0\n      bottom: 40 // default 0\n    },\n    center: { // optional without a default\n      lat: 52.3702160,\n      lng: 4.8951680\n    },\n    zoomLevel: 9.25, // 0-20, default 0\n    showUserLocation: true, // default false - requires location permissions on Android which you can remove from AndroidManifest.xml if you don't need them\n    hideAttribution: false, // default false, Mapbox requires this default if you're on a free plan\n    hideLogo: false, // default false, Mapbox requires this default if you're on a free plan\n    hideCompass: false, // default false\n    disableRotation: false, // default false\n    disableScroll: false, // default false\n    disableZoom: false, // default false\n    markers: [ // optional without a default\n      {\n        'lat': 52.3732160, // mandatory\n        'lng': 4.8941680, // mandatory\n        'title': 'Nice location', // recommended to pass in\n        'subtitle': 'Really really nice location' // one line is available on iOS, multiple on Android\n      }\n    ]\n  }).then(\n      function(result) {\n        console.log(\"Mapbox show done\");\n      },\n      function(error) {\n        console.log(\"mapbox show error: \" + error);\n      }\n  )\n```\n\n### hide\nAll further examples assume `mapbox` has been required.\nAlso, all functions support promises, but we're leaving out the `.then()` stuff for brevity where it doesn't add value.\n```js\n  mapbox.hide()\n```\n\n### addMarkers\n```js\n  mapbox.addMarkers([\n    {\n      'lat': 52.3602160, // mandatory\n      'lng': 4.8891680, // mandatory\n      'title': 'One-line title here', // no popup unless set\n      'subtitle': 'Infamous subtitle!'\n    },\n    {\n      ..\n    }\n  ])\n```\n\n### setCenter\n```js\n  mapbox.setCenter(\n      {\n        lat: 52.3602160, // mandatory\n        lng: 4.8891680, // mandatory\n        animated: false // default true\n      }\n  )\n```\n\n### function: getCenter\nHere the promise callback makes sense, so adding it to the example:\n```js\n  mapbox.getCenter().then(\n      function(result) {\n        console.log(\"Mapbox getCenter done, result: \" + JSON.stringify(result));\n      },\n      function(error) {\n        console.log(\"mapbox getCenter error: \" + error);\n      }\n  )\n```\n\n### setZoomLevel\n```js\n  mapbox.setZoomLevel(\n      {\n        level: 6.5, // mandatory, 0-20\n        animated: true // default true\n      }\n  )\n```\n\n### getZoomLevel\n```js\n  mapbox.getZoomLevel().then(\n      function(result) {\n        console.log(\"Mapbox getZoomLevel done, result: \" + JSON.stringify(result));\n      },\n      function(error) {\n        console.log(\"mapbox getZoomLevel error: \" + error);\n      }\n  )\n```\n\n### animateCamera\n\n```js\n  // this is a boring triangle drawn near Amsterdam Central Station\n  mapbox.animateCamera({\n    // this is where we animate to\n    target: {\n        lat: 52.3732160,\n        lng: 4.8941680,\n    },\n    zoomLevel: 17, // Android\n    altitude: 2000, // iOS (meters from the ground)\n    bearing: 270, // Where the camera is pointing, 0-360 (degrees)\n    tilt: 50,\n    duration: 10 // in seconds\n  })\n```\n\n### setTilt (Android)\n```js\n  mapbox.setTilt(\n      {\n        pitch: 35, // default 30 (degrees angle)\n        duration: 4000 // default 5000 (milliseconds)\n      }\n  )\n```\n\n### getTilt (Android)\n```js\n  mapbox.getTilt().then(\n      function(tilt) {\n        console.log(\"Current map tilt: \" +  tilt);\n      }\n  )\n```\n\n### addPolygon (Android)\nDraw a shape (like a line/route, or star). Just connect the dots like we did as a child. The first person to tweet a snowman drawn with this function gets a T-shirt.\n```js\n  // this is a boring triangle drawn near Amsterdam Central Station\n  mapbox.addPolygon({\n    points: [\n      {\n        'lat': 52.3832160, // mandatory\n        'lng': 4.8991680 // mandatory\n      },\n      {\n        'lat': 52.3632160,\n        'lng': 4.9011680\n      },\n      {\n        'lat': 52.3932160,\n        'lng': 4.8911680\n      }\n    ]\n  })\n```\n\n### hasFineLocationPermission / requestFineLocationPermission\nOn Android 6 you need to request permission to be able to show the user's position on the map at runtime when targeting API level 23+.\nEven if the `uses-permission` tag for `ACCESS_FINE_LOCATION` is present in `AndroidManifest.xml`.\n\nNote that `hasFineLocationPermission` will return true when:\n* You're running this on iOS, or\n* You're targeting an API level lower than 23, or\n* You're using Android < 6, or\n* You've already granted permission.\n\n```js\n  mapbox.hasFineLocationPermission().then(\n      function(granted) {\n        // if this is 'false' you probably want to call 'requestFineLocationPermission' now\n        console.log(\"Has Location Permission? \" + granted);\n      }\n  );\n\n  // if no permission was granted previously this will open a user consent screen\n  mapbox.requestFineLocationPermission().then(\n      function() {\n        console.log(\"Location permission requested\");\n      }\n  );\n```\n\nNote that the `show` function will also check for permission if you passed in `showUserLocation : true`.\nIf you didn't request permission before showing the map, and permission was needed, then\nthe location is not drawn on the map and the plugin will log an error to the console.\n",
  "readmeFilename": "README.md",
  "gitHead": "7694c8b38dd6a0ec3064ae25e645ab267ceab7d6",
  "_id": "nativescript-mapbox@1.1.2",
  "scripts": {},
  "_shasum": "6dfd30f51f1024a0223c5625793d70313c70a622",
  "_from": "../../nativescript-mapbox",
  "_resolved": "file:../../nativescript-mapbox"
}